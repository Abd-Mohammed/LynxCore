{"version":3,"file":"default-node_modules_progress_kendo-angular-icons_dist_fesm2015_index_js.js","mappings":"kPAmSA,IAAIA,EAAU,UAASA,EAAN,QAEjBA,SAAWC,UAAO,SAA4BC,GAAK,OAAO,IAAKA,GAAKF,IACpEA,EAAWG,UAAqBC,MAAwB,CAAEC,KAAML,IAChEA,EAAWM,UAAqBF,MAAwB,CAAEG,QAAS,CAAC,CAACC,SAJ9CR,GAAT,GA2CVS,EAAa,UAASA,EAAN,QAEpBA,SAAcR,UAAO,SAA+BC,GAAK,OAAO,IAAKA,GAAKO,IAC1EA,EAAcN,UAAqBC,MAAwB,CAAEC,KAAMI,IACnEA,EAAcH,UAAqBF,MAAwB,CAAEG,QAAS,CAAC,CAACC,SAJ9CC,GAAT,GAqCbC,EAAW,UAASA,EAAN,QAElBA,SAAYT,UAAO,SAA6BC,GAAK,OAAO,IAAKA,GAAKQ,IACtEA,EAAYP,UAAqBC,MAAwB,CAAEC,KAAMK,IACjEA,EAAYJ,UAAqBF,MAAwB,CAAEG,QAAS,CAACP,EAAYS,KAJzDC,GAAT,EAASA","names":["IconModule","ɵfac","t","ɵmod","ɵngcc0","type","ɵinj","imports","CommonModule","SVGIconModule","IconsModule"],"sourceRoot":"webpack:///","sources":["./node_modules/@progress/kendo-angular-icons/dist/fesm2015/index.js"],"sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright © 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { __decorate, __metadata } from 'tslib';\nimport { HostBinding, Input, Component, ElementRef, Renderer2, isDevMode, NgModule } from '@angular/core';\nimport { validatePackage } from '@progress/kendo-licensing';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { isDocumentAvailable } from '@progress/kendo-angular-common';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @hidden\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction SVGIconComponent__svg_svg_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(0, \"svg\", 1);\n    ɵngcc0.ɵɵtext(1, \"\\n        \");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r0.content, ɵngcc0.ɵɵsanitizeHtml);\n    ɵngcc0.ɵɵattribute(\"viewBox\", ctx_r0.icon.viewBox);\n} }\nconst packageMetadata = {\n    name: '@progress/kendo-angular-icons',\n    productName: 'Kendo UI for Angular',\n    productCodes: ['KENDOUIANGULAR', 'KENDOUICOMPLETE'],\n    publishDate: 1642584943,\n    version: '',\n    licensingDocsUrl: 'https://www.telerik.com/kendo-angular-ui/my-license/?utm_medium=product&utm_source=kendoangular&utm_campaign=kendo-ui-angular-purchase-license-keys-warning'\n};\n\nconst sizeClasses = {\n    'default': 'k-icon',\n    'xsmall': 'k-icon-xs',\n    'small': 'k-icon-sm',\n    'medium': 'k-icon-md',\n    'large': 'k-icon-lg',\n    'xlarge': 'k-icon-xl'\n};\n/**\n * @hidden\n */\nclass IconBase {\n    constructor(element, renderer) {\n        this.element = element;\n        this.renderer = renderer;\n        validatePackage(packageMetadata);\n    }\n    get horizontalFlip() {\n        return this.flip === 'horizontal' || this.flip === 'both';\n    }\n    get verticalFlip() {\n        return this.flip === 'vertical' || this.flip === 'both';\n    }\n    /**\n     * Specifies the theme color for the Icon.\n     *\n     * The possible values are:\n     * * `inherit` (Default)&mdash;Applies coloring based on the current color.\n     * * `primary` &mdash;Applies coloring based on primary theme color.\n     * * `secondary`&mdash;Applies coloring based on secondary theme color.\n     * * `tertiary`&mdash; Applies coloring based on tertiary theme color.\n     * * `info`&mdash;Applies coloring based on info theme color.\n     * * `success`&mdash; Applies coloring based on success theme color.\n     * * `warning`&mdash; Applies coloring based on warning theme color.\n     * * `error`&mdash; Applies coloring based on error theme color.\n     * * `dark`&mdash; Applies coloring based on dark theme color.\n     * * `light`&mdash; Applies coloring based on light theme color.\n     * * `inverse`&mdash; Applies coloring based on inverse theme color.\n     *\n     */\n    set themeColor(themeColor) {\n        const element = this.element.nativeElement;\n        this._themeColor = themeColor;\n        this.renderer.removeClass(element, `k-color-${themeColor}`);\n        if (themeColor) {\n            this.renderer.addClass(element, `k-color-${themeColor}`);\n        }\n    }\n    get themeColor() {\n        return this._themeColor;\n    }\n    /**\n     * Specifies the size of the Icon.\n     *\n     * The possible values are:\n     * * `default` (Default) (Font-size: 16px; Width: 16px; Height: 16px)\n     * * `xsmall` (Font-size: 8px; Width: 8px; Height: 8px;)\n     * * `small` (Font-size: 12px; Width: 12px; Height: 12px;)\n     * * `medium` (Font-size: 32px; Width: 32px; Height: 32px;)\n     * * `large` (Font-size: 48px; Width: 48px; Height: 48px;)\n     * * `xlarge` (Font-size: 64px; Width: 64px; Height: 64px;)\n     *\n     */\n    set size(size) {\n        const element = this.element.nativeElement;\n        this._size = size;\n        const sizeClass = sizeClasses[this.size];\n        this.renderer.removeClass(element, sizeClass);\n        if (size !== 'default') {\n            this.renderer.addClass(element, sizeClass);\n        }\n    }\n    get size() {\n        return this._size;\n    }\n}\nIconBase.ɵfac = function IconBase_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };\nIconBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: IconBase, hostVars: 4, hostBindings: function IconBase_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-flip-h\", ctx.horizontalFlip)(\"k-flip-v\", ctx.verticalFlip);\n    } }, inputs: { themeColor: \"themeColor\", size: \"size\", flip: \"flip\" } });\n__decorate([\n    HostBinding('class.k-flip-h'),\n    __metadata(\"design:type\", Boolean),\n    __metadata(\"design:paramtypes\", [])\n], IconBase.prototype, \"horizontalFlip\", null);\n__decorate([\n    HostBinding('class.k-flip-v'),\n    __metadata(\"design:type\", Boolean),\n    __metadata(\"design:paramtypes\", [])\n], IconBase.prototype, \"verticalFlip\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], IconBase.prototype, \"flip\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], IconBase.prototype, \"themeColor\", null);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], IconBase.prototype, \"size\", null);\n\n/**\n * Represents the Kendo UI Icon component for Angular.\n */\nlet IconComponent = class IconComponent extends IconBase {\n    constructor(element, renderer) {\n        super(element, renderer);\n        this.element = element;\n        this.renderer = renderer;\n        this.hostClass = true;\n    }\n    /**\n     * Defines the name for an existing icon in a Kendo UI theme, which will be rendered.\n     * All [Kendo UI Icons]({% slug icons %}#toc-list-of-font-icons) are supported.\n     */\n    set name(name) {\n        const element = this.element.nativeElement;\n        this.renderer.removeClass(element, `k-i-${this.name}`);\n        this._name = name;\n        if (name) {\n            this.renderer.addClass(element, `k-i-${this.name}`);\n        }\n    }\n    get name() {\n        return this._name;\n    }\n};\nIconComponent.ɵfac = function IconComponent_Factory(t) { return new (t || IconComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nIconComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: IconComponent, selectors: [[\"kendo-icon\"]], hostVars: 2, hostBindings: function IconComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-icon\", ctx.hostClass);\n    } }, inputs: { name: \"name\" }, exportAs: [\"kendoIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 0, vars: 0, template: function IconComponent_Template(rf, ctx) { }, encapsulation: 2 });\n__decorate([\n    HostBinding('class.k-icon'),\n    __metadata(\"design:type\", Boolean)\n], IconComponent.prototype, \"hostClass\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String),\n    __metadata(\"design:paramtypes\", [String])\n], IconComponent.prototype, \"name\", null);\nIconComponent = __decorate([ __metadata(\"design:paramtypes\", [ElementRef, Renderer2])\n], IconComponent);\n\n/**\n * Represents the Kendo UI SVG Icon component for Angular.\n */\nlet SVGIconComponent = class SVGIconComponent extends IconBase {\n    constructor(domSanitizer, element, renderer) {\n        super(element, renderer);\n        this.domSanitizer = domSanitizer;\n        this.element = element;\n        this.renderer = renderer;\n        this.hostClass = true;\n    }\n    /**\n     * Defines the SVG icon, which will be rendered.\n     */\n    set icon(icon) {\n        const element = this.element.nativeElement;\n        if (this._icon && this._icon.name) {\n            this.renderer.removeClass(element, `k-svg-i-${this._icon.name}`);\n        }\n        this._icon = icon;\n        this.renderer.addClass(element, `k-svg-i-${this._icon.name}`);\n    }\n    get icon() {\n        return this._icon;\n    }\n    get content() {\n        this.safeContent = this.safeContent || this.domSanitizer.bypassSecurityTrustHtml(this.icon.content);\n        return this.safeContent;\n    }\n    get visible() {\n        return this.icon && isDocumentAvailable();\n    }\n    ngOnInit() {\n        this.verifyIconProperty();\n    }\n    verifyIconProperty() {\n        if (!isDevMode()) {\n            return;\n        }\n        if (!this._icon) {\n            throw new Error(`\n                Invalid configuration.\n                The input [icon] is required for the Kendo UI SVG Icon component for Angular.\n                See https://www.telerik.com/kendo-angular-ui/components/icons/svg-icon\n            `);\n        }\n    }\n};\nSVGIconComponent.ɵfac = function SVGIconComponent_Factory(t) { return new (t || SVGIconComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nSVGIconComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SVGIconComponent, selectors: [[\"kendo-svg-icon\"]], hostVars: 2, hostBindings: function SVGIconComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"k-svg-icon\", ctx.hostClass);\n    } }, inputs: { icon: \"icon\" }, exportAs: [\"kendoSVGIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 2, vars: 1, consts: [[\"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", 3, \"innerHTML\", 4, \"ngIf\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", 3, \"innerHTML\"]], template: function SVGIconComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtext(0, \"\\n        \");\n        ɵngcc0.ɵɵtemplate(1, SVGIconComponent__svg_svg_1_Template, 2, 2, \"svg\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.visible);\n    } }, directives: [ɵngcc2.NgIf], encapsulation: 2 });\n__decorate([\n    HostBinding('class.k-svg-icon'),\n    __metadata(\"design:type\", Boolean)\n], SVGIconComponent.prototype, \"hostClass\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object),\n    __metadata(\"design:paramtypes\", [Object])\n], SVGIconComponent.prototype, \"icon\", null);\nSVGIconComponent = __decorate([ __metadata(\"design:paramtypes\", [DomSanitizer, ElementRef, Renderer2])\n], SVGIconComponent);\n\nconst exportedModules = [\n    IconComponent\n];\nconst declarations = [\n    ...exportedModules\n];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Icon component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Icon module\n * import { IconModule } from '@progress/kendo-angular-icons';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, IconModule], // import Icon module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nlet IconModule = class IconModule {\n};\nIconModule.ɵfac = function IconModule_Factory(t) { return new (t || IconModule)(); };\nIconModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: IconModule });\nIconModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n\nconst exportedModules$1 = [\n    SVGIconComponent\n];\nconst declarations$1 = [\n    ...exportedModules$1\n];\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the SVG Icon component.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the SVG Icon module\n * import { SVGIconModule } from '@progress/kendo-angular-icons';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, SVGIconModule], // import SVG Icon module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nlet SVGIconModule = class SVGIconModule {\n};\nSVGIconModule.ɵfac = function SVGIconModule_Factory(t) { return new (t || SVGIconModule)(); };\nSVGIconModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: SVGIconModule });\nSVGIconModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n\n/**\n * Represents the [NgModule]({{ site.data.urls.angular['ngmoduleapi'] }})\n * definition for the Icons components.\n *\n * @example\n *\n * ```ts-no-run\n * // Import the Icons module\n * import { IconsModule } from '@progress/kendo-angular-icons';\n *\n * // The browser platform with a compiler\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n *\n * import { NgModule } from '@angular/core';\n *\n * // Import the app component\n * import { AppComponent } from './app.component';\n *\n * // Define the app module\n * _@NgModule({\n *     declarations: [AppComponent], // declare app component\n *     imports:      [BrowserModule, IconsModule], // import Icons module\n *     bootstrap:    [AppComponent]\n * })\n * export class AppModule {}\n *\n * // Compile and launch the module\n * platformBrowserDynamic().bootstrapModule(AppModule);\n *\n * ```\n */\nlet IconsModule = class IconsModule {\n};\nIconsModule.ɵfac = function IconsModule_Factory(t) { return new (t || IconsModule)(); };\nIconsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: IconsModule });\nIconsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [IconModule, SVGIconModule] });\n\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconComponent, [{\n        type: Component,\n        args: [{\n                exportAs: 'kendoIcon',\n                selector: 'kendo-icon',\n                template: ``\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { hostClass: [{\n            type: HostBinding,\n            args: ['class.k-icon']\n        }], name: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SVGIconComponent, [{\n        type: Component,\n        args: [{\n                exportAs: 'kendoSVGIcon',\n                selector: 'kendo-svg-icon',\n                template: `\n        <svg *ngIf=\"visible\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n             [attr.viewBox]=\"icon.viewBox\" [innerHTML]=\"content\">\n        </svg>`\n            }]\n    }], function () { return [{ type: ɵngcc1.DomSanitizer }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { hostClass: [{\n            type: HostBinding,\n            args: ['class.k-svg-icon']\n        }], icon: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [declarations],\n                exports: [exportedModules],\n                imports: [CommonModule]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IconModule, { declarations: function () { return [IconComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [IconComponent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SVGIconModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [declarations$1],\n                exports: [exportedModules$1],\n                imports: [CommonModule]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SVGIconModule, { declarations: function () { return [SVGIconComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SVGIconComponent]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconsModule, [{\n        type: NgModule,\n        args: [{\n                exports: [\n                    IconModule,\n                    SVGIconModule\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(IconsModule, { exports: [IconModule, SVGIconModule] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { IconBase, IconComponent, SVGIconComponent, IconModule, SVGIconModule, IconsModule };\n\n"]}