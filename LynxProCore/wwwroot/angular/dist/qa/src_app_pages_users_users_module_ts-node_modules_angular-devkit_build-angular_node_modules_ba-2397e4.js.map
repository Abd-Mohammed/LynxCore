{"version":3,"file":"src_app_pages_users_users_module_ts-node_modules_angular-devkit_build-angular_node_modules_ba-2397e4.js","mappings":"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","names":["UserService","constructor","http","this","environment","id","name","number","image","driverName","location","latitude","longtitude","properties","UTL","shipment","occupied","startTime","endTime","getUserById","userId","get","newUserapiEndPoint","getUsersData","formData","FormData","append","post","apiEndPoint","DeactivateUser","ActivateUser","getVehicles","mockNetworkCall","vehiclesDB","valueToReturn","Observable","observer","setTimeout","next","complete","e","factory","i0","EditViewComponent","activatedRoute","fb","humanizer","apiService","cd","Subject","displayName","url","subscribe","pageMode","path","selectedUserId","snapshot","queryParams","elements","ngUserForm","controls","ngOnInit","createForm","errorMessages","createErrorList","ngAfterViewChecked","detectChanges","ngAfterViewInit","assignCustomErrorMessage","error","message","res","userModel","patchValue","group","Username","Validators","Email","FirstName","SecondName","ThirdName","LastName","MobileNo","Identity","cookieExpirationDuration","Preferences","RequestRate","DisplayLanguage","UserDefaultPreferences","ngFormKeys","Object","keys","formErrors","forEach","key","push","controlName","errors","transform","N","find","selectors","routes","component","mapLoader","lat","lng","ShipmentNumber","OrderNumber","Customer","CreatedDate","Date","Vehicle","Driver","ArrivalTime","EndTime","initMap","gmapElement","defaultLocation","then","createMarker","getGridColumns","auditTrail","map","field","header","UsersComponent","UsersRoutingModule","RouterModule","KENDO_COMPONENTS","GridModule","PDFModule","ExcelModule","InputsModule","ButtonsModule","LabelModule","DropDownsModule","IconsModule","UsersModule","CommonModule","FormsDirectivesModule","FormsModule","ReactiveFormsModule","NgxSkeletonLoaderModule","LynxGridModule","Required_VALIDATOR","provide","NG_VALIDATORS","useExisting","forwardRef","RequiredValidator","multi","required","_validator","control","value","valid","validate","c","m","ValidationErrorDirective","el","renderer","form","ngOnDestroy","onDestroy$","clearAllErrors","showError$","pipe","takeUntil","checkAllInputs","onInputClearError","formGroup","valueChanges","allInputChildren","nativeElement","querySelectorAll","getTargetInputFormControlName","index","s","attributes","getNamedItem","nodeValue","input","formControlName","getFormControlValidStatus","parentDiv","parentElement","addErrorStyle","addErrorMessage","removeErrorMessage","removeErrorStyle","formControl","parent","addClass","removeClass","getErrorText","getErrorMessage","span","createElement","messageText","createText","appendChild","nextSibling","messageSpan","exsistingSpan","removeChild","g","f","_","y","C","Promise","u"],"sourceRoot":"webpack:///","sources":["./src/app/pages/users/services/user.service.ts","./src/app/pages/users/components/edit-view/edit-view.component.html","./src/app/pages/users/components/edit-view/edit-view.component.ts","./src/app/pages/users/users-routing.module.ts","./src/app/pages/users/view/users.component.ts","./src/app/pages/users/view/users.component.html","./src/app/pages/users/users.module.ts","./src/app/shared/directives/forms-directives/required-directive/required.directive.ts","./src/app/shared/directives/forms-directives/forms-directives.module.ts","./src/app/shared/directives/forms-directives/validation-error-directive/validation-error.directive.ts","./node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/consistent-type-imports */\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport type { IVehicle } from '../assign.facade';\r\nimport { environment } from './../../../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  private readonly apiEndPoint = environment.APIUrl + 'Administration/Users';\r\n  private readonly newUserapiEndPoint = environment.APIUrl + 'api/UserPreview';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUserById(userId: number) {\r\n    return this.http.get(this.newUserapiEndPoint + '/Details?id=' + userId);\r\n  }\r\n\r\n  getUsersData() {\r\n    const req = { pageSize: '20', page: '1', sort: 'Username-asc' };\r\n    const formData = new FormData();\r\n    formData.append('pageSize', req.pageSize);\r\n    formData.append('page', req.page);\r\n    formData.append('sort', req.sort);\r\n    formData.append('group', '');\r\n    formData.append('filter', '');\r\n\r\n    return this.http.post(this.apiEndPoint + '/Read', formData);\r\n  }\r\n\r\n  DeactivateUser(userId: number) {\r\n    return this.http.get(this.apiEndPoint + `/DeactivateUser?id=${userId}`);\r\n  }\r\n\r\n  ActivateUser(userId: number) {\r\n    return this.http.get(this.apiEndPoint + `/ActivateUser?id=${userId}`);\r\n  }\r\n\r\n  //Local dummy data, acting as Database\r\n  // eslint-disable-next-line @typescript-eslint/member-ordering\r\n  private vehiclesDB: IVehicle[] = [\r\n    {\r\n      id: 1,\r\n      name: 'Nissan Frontier',\r\n      number: '3444353354',\r\n      image: 'https://cdn0.iconfinder.com/data/icons/car-brands/550/Nissan_logo-512.png',\r\n      driverName: 'Pradeep Dhananjay',\r\n      location: {\r\n        latitude: '31.963158',\r\n        longtitude: '35.930359',\r\n      },\r\n      properties: {\r\n        UTL: 79,\r\n        shipment: 33,\r\n        occupied: {\r\n          startTime: '12:00 AM',\r\n          endTime: '09:00 PM',\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'GMC Sierra 1500',\r\n      number: '3444353354',\r\n      image: 'https://cdn0.iconfinder.com/data/icons/car-brands/550/Nissan_logo-512.png',\r\n      driverName: 'Pradeep Dhananjay',\r\n      location: {\r\n        latitude: '31.963158',\r\n        longtitude: '35.930359',\r\n      },\r\n      properties: {\r\n        UTL: 79,\r\n        shipment: 33,\r\n        occupied: {\r\n          startTime: '12:00 AM',\r\n          endTime: '09:00 PM',\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'GMC Sierra 1500',\r\n      number: '3444353354',\r\n      image: 'https://cdn0.iconfinder.com/data/icons/car-brands/550/Nissan_logo-512.png',\r\n      driverName: 'Pradeep Dhananjay',\r\n      location: {\r\n        latitude: '31.963158',\r\n        longtitude: '35.930359',\r\n      },\r\n      properties: {\r\n        UTL: 79,\r\n        shipment: 33,\r\n        occupied: {\r\n          startTime: '12:00 AM',\r\n          endTime: '09:00 PM',\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'GMC Sierra 1500',\r\n      number: '3444353354',\r\n      image: 'https://cdn0.iconfinder.com/data/icons/car-brands/550/Nissan_logo-512.png',\r\n      driverName: 'Pradeep Dhananjay',\r\n      location: {\r\n        latitude: '31.963158',\r\n        longtitude: '35.930359',\r\n      },\r\n      properties: {\r\n        UTL: 79,\r\n        shipment: 33,\r\n        occupied: {\r\n          startTime: '12:00 AM',\r\n          endTime: '09:00 PM',\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'GMC Sierra 1500',\r\n      number: '3444353354',\r\n      image: 'https://cdn0.iconfinder.com/data/icons/car-brands/550/Nissan_logo-512.png',\r\n      driverName: 'Pradeep Dhananjay',\r\n      location: {\r\n        latitude: '31.963158',\r\n        longtitude: '35.930359',\r\n      },\r\n      properties: {\r\n        UTL: 79,\r\n        shipment: 33,\r\n        occupied: {\r\n          startTime: '12:00 AM',\r\n          endTime: '09:00 PM',\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'GMC Sierra 1500',\r\n      number: '3444353354',\r\n      image: 'https://cdn0.iconfinder.com/data/icons/car-brands/550/Nissan_logo-512.png',\r\n      driverName: 'Pradeep Dhananjay',\r\n      location: {\r\n        latitude: '31.963158',\r\n        longtitude: '35.930359',\r\n      },\r\n      properties: {\r\n        UTL: 79,\r\n        shipment: 33,\r\n        occupied: {\r\n          startTime: '12:00 AM',\r\n          endTime: '09:00 PM',\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: 7,\r\n      name: 'GMC Sierra 1500',\r\n      number: '3444353354',\r\n      image: 'https://cdn0.iconfinder.com/data/icons/car-brands/550/Nissan_logo-512.png',\r\n      driverName: 'Pradeep Dhananjay',\r\n      location: {\r\n        latitude: '31.963158',\r\n        longtitude: '35.930359',\r\n      },\r\n      properties: {\r\n        UTL: 79,\r\n        shipment: 33,\r\n        occupied: {\r\n          startTime: '12:00 AM',\r\n          endTime: '09:00 PM',\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: 8,\r\n      name: 'GMC Sierra 1500',\r\n      number: '3444353354',\r\n      image: 'https://cdn0.iconfinder.com/data/icons/car-brands/550/Nissan_logo-512.png',\r\n      driverName: 'Pradeep Dhananjay',\r\n      location: {\r\n        latitude: '31.963158',\r\n        longtitude: '35.930359',\r\n      },\r\n      properties: {\r\n        UTL: 79,\r\n        shipment: 33,\r\n        occupied: {\r\n          startTime: '12:00 AM',\r\n          endTime: '09:00 PM',\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: 9,\r\n      name: 'GMC Sierra 1500',\r\n      number: '3444353354',\r\n      image: 'https://cdn0.iconfinder.com/data/icons/car-brands/550/Nissan_logo-512.png',\r\n      driverName: 'Pradeep Dhananjay',\r\n      location: {\r\n        latitude: '31.963158',\r\n        longtitude: '35.930359',\r\n      },\r\n      properties: {\r\n        UTL: 79,\r\n        shipment: 33,\r\n        occupied: {\r\n          startTime: '12:00 AM',\r\n          endTime: '09:00 PM',\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'GMC Sierra 1500',\r\n      number: '3444353354',\r\n      image: 'https://cdn0.iconfinder.com/data/icons/car-brands/550/Nissan_logo-512.png',\r\n      driverName: 'Pradeep Dhananjay',\r\n      location: {\r\n        latitude: '31.963158',\r\n        longtitude: '35.930359',\r\n      },\r\n      properties: {\r\n        UTL: 79,\r\n        shipment: 33,\r\n        occupied: {\r\n          startTime: '12:00 AM',\r\n          endTime: '09:00 PM',\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: 11,\r\n      name: 'GMC Sierra 1500',\r\n      number: '3444353354',\r\n      image: 'https://cdn0.iconfinder.com/data/icons/car-brands/550/Nissan_logo-512.png',\r\n      driverName: 'Pradeep Dhananjay',\r\n      location: {\r\n        latitude: '31.963158',\r\n        longtitude: '35.930359',\r\n      },\r\n      properties: {\r\n        UTL: 79,\r\n        shipment: 33,\r\n        occupied: {\r\n          startTime: '12:00 AM',\r\n          endTime: '09:00 PM',\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: 12,\r\n      name: 'GMC Sierra 1500',\r\n      number: '3444353354',\r\n      image: 'https://cdn0.iconfinder.com/data/icons/car-brands/550/Nissan_logo-512.png',\r\n      driverName: 'Pradeep Dhananjay',\r\n      location: {\r\n        latitude: '31.963158',\r\n        longtitude: '35.930359',\r\n      },\r\n      properties: {\r\n        UTL: 79,\r\n        shipment: 33,\r\n        occupied: {\r\n          startTime: '12:00 AM',\r\n          endTime: '09:00 PM',\r\n        },\r\n      },\r\n    },\r\n    {\r\n      id: 13,\r\n      name: 'GMC Sierra 1500',\r\n      number: '3444353354',\r\n      image: 'https://cdn0.iconfinder.com/data/icons/car-brands/550/Nissan_logo-512.png',\r\n      driverName: 'Pradeep Dhananjay',\r\n      location: {\r\n        latitude: '31.963158',\r\n        longtitude: '35.930359',\r\n      },\r\n      properties: {\r\n        UTL: 79,\r\n        shipment: 33,\r\n        occupied: {\r\n          startTime: '12:00 AM',\r\n          endTime: '09:00 PM',\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  getVehicles(): Observable<IVehicle[]> {\r\n    return this.mockNetworkCall([...this.vehiclesDB]); // return dummy data\r\n    //return this.http.get<Hero[]>(this.API);\r\n  }\r\n\r\n  //mocking the network call by adding delay of 1 sec and returning the passed value\r\n  mockNetworkCall(valueToReturn: any): Observable<any> {\r\n    return Observable.create((observer: { next: (arg0: any) => void; complete: () => void }) => {\r\n      // eslint-disable-next-line no-undef\r\n      setTimeout(() => {\r\n        observer.next(valueToReturn);\r\n        observer.complete();\r\n      }, 4000); //adding 1 sec delay\r\n    });\r\n  }\r\n}\r\n","<div class=\"portlet\">\r\n  <div class=\"portlet-title\">\r\n    <h3 class=\"page-title\">\r\n      Users <small>{{ pageMode === 'edit' ? 'Edit' : 'Create' }}</small>\r\n    </h3>\r\n    <div class=\"flex justify-end\">\r\n      <button class=\"btn secondary\" routerLink=\"..\">Back to list</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"portlet-body form\">\r\n    <div class=\"form-body\">\r\n      <form [formGroup]=\"ngUserForm\" appValidationError [showError$]=\"showError$\" [errorMessages]=\"errorMessages\">\r\n        <div class=\"mb-3\">\r\n          <h3 class=\"form-section\">General</h3>\r\n          <ng-container *ngIf=\"pageMode === 'edit'; else formView\">\r\n            <div class=\"form-group\">\r\n              <label class=\"control-label\" for=\"Username\">Username</label>\r\n              <br />\r\n              <ng-container *ngIf=\"userModel\">\r\n                <label class=\"control-label\">{{ userModel?.Username }}</label>\r\n              </ng-container>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label class=\"control-label\" for=\"Username\">Email</label>\r\n              <br />\r\n              <ng-container *ngIf=\"userModel\">\r\n                <label class=\"control-label\">{{ userModel?.Email }}</label>\r\n              </ng-container>\r\n            </div>\r\n          </ng-container>\r\n          <ng-template #formView>\r\n            <div class=\"form-group mb-3\">\r\n              <label class=\"form-label text-muted\" for=\"txtUserName\"\r\n                >Username <span class=\"text-danger\">*</span>\r\n              </label>\r\n              <input\r\n                class=\"form-control\"\r\n                formControlName=\"Username\"\r\n                placeholder=\"Enter Username...\"\r\n                id=\"txtUserName\"\r\n                aria-describedby=\"Username\"\r\n                [ngClass]=\"{\r\n                  'is-invalid': submitted && elements.Username.errors\r\n                }\"\r\n              />\r\n            </div>\r\n\r\n            <div class=\"form-group mb-3\">\r\n              <label class=\"form-label text-muted\" for=\"txtEmail\">Email <span class=\"text-danger\">*</span> </label>\r\n              <input\r\n                class=\"form-control\"\r\n                formControlName=\"Email\"\r\n                placeholder=\"Enter Email...\"\r\n                id=\"txtEmail\"\r\n                aria-describedby=\"Email\"\r\n                [ngClass]=\"{ 'is-invalid': submitted && elements.Email.errors }\"\r\n              />\r\n            </div>\r\n          </ng-template>\r\n\r\n          <div class=\"form-group mb-3\">\r\n            <label class=\"form-label text-muted\" for=\"txtFirstName\"\r\n              >First Name <span class=\"text-danger\">*</span>\r\n            </label>\r\n            <input\r\n              class=\"form-control\"\r\n              formControlName=\"FirstName\"\r\n              placeholder=\"Enter First Name...\"\r\n              id=\"txtFirstName\"\r\n              aria-describedby=\"FirstName\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && elements.FirstName.errors\r\n              }\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group mb-3\">\r\n            <label class=\"form-label text-muted\" for=\"txtFirstName\">Second Name</label>\r\n            <input\r\n              class=\"form-control\"\r\n              formControlName=\"SecondName\"\r\n              placeholder=\"Enter Second Name...\"\r\n              id=\"txtSecondName\"\r\n              aria-describedby=\"SecondName\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && elements.SecondName.errors\r\n              }\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group mb-3\">\r\n            <label class=\"form-label text-muted\" for=\"txtThirdName\">Third Name</label>\r\n            <input\r\n              class=\"form-control\"\r\n              formControlName=\"ThirdName\"\r\n              placeholder=\"Enter Third Name...\"\r\n              id=\"txtThirdName\"\r\n              aria-describedby=\"ThirdName\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && elements.ThirdName.errors\r\n              }\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group mb-3\">\r\n            <label class=\"form-label text-muted\" for=\"txtLastName\">Last Name <span class=\"text-danger\">*</span> </label>\r\n            <input\r\n              class=\"form-control\"\r\n              formControlName=\"LastName\"\r\n              placeholder=\"Enter Last Name...\"\r\n              id=\"txtLastName\"\r\n              aria-describedby=\"LastName\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && elements.LastName.errors\r\n              }\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group mb-3\">\r\n            <label class=\"form-label text-muted\" for=\"txtMobileNo\">Mobile No <span class=\"text-danger\">*</span> </label>\r\n            <input\r\n              class=\"form-control\"\r\n              formControlName=\"MobileNo\"\r\n              placeholder=\"Enter Mobile No...\"\r\n              id=\"txtMobileNo\"\r\n              aria-describedby=\"MobileNo\"\r\n              [ngClass]=\"{\r\n                'is-invalid': submitted && elements.MobileNo.errors\r\n              }\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div formGroupName=\"Identity\">\r\n          <h3 class=\"form-section\">Identity</h3>\r\n          <div class=\"form-group mb-3 flex flex-col\">\r\n            <label class=\"form-label text-muted mb-1\">Cookie Expiration Duration</label>\r\n\r\n            <kendo-dropdownlist\r\n              class=\"w-full\"\r\n              style=\"width: 100%\"\r\n              [data]=\"cookieExpirationLst\"\r\n              [defaultItem]=\"{\r\n                displayName: 'Select Expiration Duration',\r\n                id: null\r\n              }\"\r\n              [textField]=\"'displayName'\"\r\n              [valueField]=\"'id'\"\r\n              required\r\n              formControlName=\"cookieExpirationDuration\"\r\n              [valuePrimitive]=\"true\"\r\n            >\r\n            </kendo-dropdownlist>\r\n            <span class=\"help-block\" *ngIf=\"pageMode === 'edit'\">\r\n              Modified value will take effect in the next active user session.\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <ng-container *ngIf=\"pageMode === 'add'\">\r\n          <div formGroupName=\"Preferences\">\r\n            <h3 class=\"form-section\">Preferences</h3>\r\n            <div class=\"form-group mb-3 flex flex-col\">\r\n              <label class=\"form-label text-muted mb-1\">Request Rate (min) <span class=\"text-danger\">*</span></label>\r\n\r\n              <kendo-dropdownlist\r\n                class=\"w-full\"\r\n                style=\"width: 100%\"\r\n                [data]=\"requestRateList\"\r\n                [defaultItem]=\"{ displayName: 'Select Request Rate', id: null }\"\r\n                [textField]=\"'displayName'\"\r\n                [valueField]=\"'id'\"\r\n                required\r\n                formControlName=\"RequestRate\"\r\n                [valuePrimitive]=\"true\"\r\n              >\r\n              </kendo-dropdownlist>\r\n            </div>\r\n\r\n            <div class=\"form-group mb-3 flex flex-col\">\r\n              <label class=\"form-label text-muted mb-1\">Display Language <span class=\"text-danger\">*</span></label>\r\n\r\n              <kendo-dropdownlist\r\n                class=\"w-full\"\r\n                style=\"width: 100%\"\r\n                [data]=\"displayLanguagesList\"\r\n                [defaultItem]=\"{\r\n                  displayName: 'Select Display Language',\r\n                  id: null\r\n                }\"\r\n                [textField]=\"'displayName'\"\r\n                [valueField]=\"'id'\"\r\n                required\r\n                formControlName=\"DisplayLanguage\"\r\n                [valuePrimitive]=\"true\"\r\n              >\r\n              </kendo-dropdownlist>\r\n            </div>\r\n\r\n            <div class=\"form-group mb-3\">\r\n              <label class=\"k-label text-muted\">\r\n                Use Default Preferences\r\n                <input\r\n                  type=\"checkbox\"\r\n                  formControlName=\"UserDefaultPreferences\"\r\n                  name=\"UserDefaultPreferences\"\r\n                  id=\"UserDefaultPreferences\"\r\n                  [ngClass]=\"{\r\n                    'is-invalid': submitted && elements.UserDefaultPreferences.errors\r\n                  }\"\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"form-footer\">\r\n      <div class=\"form-actions\">\r\n        <button class=\"btn primary\">Save</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { AfterViewChecked, AfterViewInit, ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { IFormErrors } from 'src/app/shared/directives/forms-directives/validation-error-directive/error-message.interface';\r\nimport { HumanizerService } from 'src/app/shared/services/humanizer/humanizer.service';\r\nimport { UserService } from './../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-view',\r\n  templateUrl: './edit-view.component.html',\r\n  styleUrls: ['./edit-view.component.scss'],\r\n})\r\nexport class EditViewComponent implements OnInit, AfterViewInit, AfterViewChecked {\r\n  pageMode: 'add' | 'edit' = 'edit';\r\n  selectedUserId = -1;\r\n  ngUserForm!: FormGroup;\r\n  submitted = false;\r\n  showError$ = new Subject<boolean>();\r\n  errorMessages: IFormErrors[] = [];\r\n  userModel: any = {};\r\n\r\n  public cookieExpirationLst: any[] = [\r\n    { id: 'null', displayName: 'None...' },\r\n    { id: '30min', displayName: '30 min' },\r\n    { id: '1h', displayName: '1h' },\r\n    { id: '2h', displayName: '2h' },\r\n    { id: '6h', displayName: '6h' },\r\n    { id: '12h', displayName: '12h' },\r\n    { id: '1day', displayName: '1 day' },\r\n    { id: '7days', displayName: '7 days' },\r\n    { id: '30days', displayName: '30 days' },\r\n  ];\r\n\r\n  public requestRateList: any[] = [\r\n    { id: '1', displayName: '1' },\r\n    { id: '2', displayName: '2' },\r\n    { id: '3', displayName: '3' },\r\n    { id: '4', displayName: '4' },\r\n    { id: '5', displayName: '5' },\r\n    { id: '10', displayName: '10' },\r\n    { id: '15', displayName: '15' },\r\n    { id: '30', displayName: '30' },\r\n    { id: '60', displayName: '60' },\r\n  ];\r\n\r\n  public displayLanguagesList: any[] = [\r\n    { id: 'en', displayName: 'English' },\r\n    { id: 'ar', displayName: 'عربي' },\r\n    { id: 'fr', displayName: 'Français' },\r\n  ];\r\n\r\n  public get elements() {\r\n    return this.ngUserForm.controls;\r\n  }\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private fb: FormBuilder,\r\n    private humanizer: HumanizerService,\r\n    private apiService: UserService,\r\n    private cd: ChangeDetectorRef\r\n  ) {\r\n    this.activatedRoute.url.subscribe((e: any) => (this.pageMode = e[0].path));\r\n    this.selectedUserId = activatedRoute.snapshot.queryParams.id;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.errorMessages = this.createErrorList();\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.assignCustomErrorMessage('mobileNo', {\r\n      error: 'pattern',\r\n      message: 'Example: +9554011111',\r\n    });\r\n    this.assignCustomErrorMessage('username', {\r\n      error: 'maxLength',\r\n      message: 'Username must be between 3 to 20 characters!',\r\n    });\r\n    this.assignCustomErrorMessage('username', {\r\n      error: 'minLength',\r\n      message: 'Username must be between 3 to 20 characters!',\r\n    });\r\n\r\n    if (this.pageMode === 'edit') {\r\n      this.apiService.getUserById(this.selectedUserId).subscribe((res: any) => {\r\n        this.userModel = res;\r\n        this.ngUserForm.patchValue(res);\r\n      });\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.ngUserForm = this.fb.group({\r\n      Username: ['', [Validators.required, Validators.maxLength(20), Validators.minLength(3)]],\r\n      Email: ['', [Validators.required, Validators.email]],\r\n      FirstName: ['', Validators.required],\r\n      SecondName: [''],\r\n      ThirdName: [''],\r\n      LastName: ['', Validators.required],\r\n      MobileNo: ['', [Validators.required, Validators.pattern(`^([+]?)(?![0| ]+$)[0-9 ]+$`)]],\r\n      Identity: this.fb.group({\r\n        cookieExpirationDuration: [null],\r\n      }),\r\n      Preferences: this.fb.group({\r\n        RequestRate: [null, Validators.required],\r\n        // eslint-disable-next-line no-sparse-arrays\r\n        DisplayLanguage: [, Validators.required],\r\n        UserDefaultPreferences: [false],\r\n      }),\r\n    });\r\n  }\r\n\r\n  createErrorList(): IFormErrors[] {\r\n    // get formGroup control keys\r\n    const ngFormKeys = Object.keys(this.ngUserForm.controls);\r\n    const formErrors: IFormErrors[] = [];\r\n    // assign required error message to required fields\r\n    ngFormKeys.forEach((key) => {\r\n      formErrors.push({\r\n        controlName: key,\r\n        errors: [\r\n          {\r\n            error: 'required',\r\n            message: `${this.humanizer.transform(key)} is required!`,\r\n          },\r\n        ],\r\n      });\r\n    });\r\n    return formErrors;\r\n  }\r\n\r\n  assignCustomErrorMessage(key: string, error: { error: string; message: string }) {\r\n    // assign custom error messages to controls\r\n    this.errorMessages.find((e) => e.controlName == key)?.errors.push(error);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport type { Routes } from '@angular/router';\r\nimport { RouterModule } from '@angular/router';\r\nimport { EditViewComponent } from './components/edit-view/edit-view.component';\r\nimport { UsersComponent } from './view/users.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: UsersComponent },\r\n  { path: 'edit', component: EditViewComponent },\r\n  { path: 'add', component: EditViewComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UsersRoutingModule {}\r\n","/* eslint-disable no-undef */\r\n/* eslint-disable @typescript-eslint/consistent-type-imports */\r\nimport type { AfterViewInit } from '@angular/core';\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { HumanizerService } from 'src/app/shared/services/humanizer/humanizer.service';\r\nimport { MapLoaderService } from 'src/app/shared/services/map-loader/map-loader.service';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss'],\r\n})\r\nexport class UsersComponent implements AfterViewInit {\r\n  defaultLocation = { lat: 25.18098331014027, lng: 55.2307269225392 };\r\n  @ViewChild('gmap') gmapElement: any;\r\n  map!: google.maps.Map;\r\n  isLoading = false;\r\n  // public gridColumns: IGridColumn[] = [];\r\n  gridData = [\r\n    {\r\n      ShipmentNumber: '8589584h',\r\n      OrderNumber: '8589584',\r\n      Customer: 'Suleiman Mohammed',\r\n      CreatedDate: new Date(),\r\n      Vehicle: 'AABBCCC',\r\n      Driver: 'Suleiman Mohammed',\r\n      ArrivalTime: '2:05 pm',\r\n      EndTime: '2:33 pm',\r\n    },\r\n    {\r\n      ShipmentNumber: '8589584h',\r\n      OrderNumber: '8589584',\r\n      Customer: 'Suleiman Mohammed',\r\n      CreatedDate: new Date(),\r\n      Vehicle: 'AABBCCC',\r\n      Driver: 'Suleiman Mohammed',\r\n      ArrivalTime: '2:05 pm',\r\n      EndTime: '2:33 pm',\r\n    },\r\n    {\r\n      ShipmentNumber: '8589584h',\r\n      OrderNumber: '8589584',\r\n      Customer: 'Suleiman Mohammed',\r\n      CreatedDate: new Date(),\r\n      Vehicle: 'AABBCCC',\r\n      Driver: 'Suleiman Mohammed',\r\n      ArrivalTime: '2:05 pm',\r\n      EndTime: '2:33 pm',\r\n    },\r\n    {\r\n      ShipmentNumber: '8589584h',\r\n      OrderNumber: '8589584',\r\n      Customer: 'Suleiman Mohammed',\r\n      CreatedDate: new Date(),\r\n      Vehicle: 'AABBCCC',\r\n      Driver: 'Suleiman Mohammed',\r\n      ArrivalTime: '2:05 pm',\r\n      EndTime: '2:33 pm',\r\n    },\r\n  ];\r\n  constructor(public mapLoader: MapLoaderService, private humanizer: HumanizerService) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.mapLoader.initMap(this.gmapElement, this.defaultLocation.lat, this.defaultLocation.lng).then(() => {\r\n      this.mapLoader.createMarker(this.defaultLocation);\r\n    }); // await until gapi load\r\n\r\n    // this.gridColumns = this.getGridColumns(this.gridData[0])\r\n  }\r\n\r\n  public getGridColumns(auditTrail: {\r\n    ShipmentNumber: string;\r\n    OrderNumber: string;\r\n    Customer: string;\r\n    CreatedDate: Date;\r\n    Vehicle: string;\r\n    Driver: string;\r\n    ArrivalTime: string;\r\n    EndTime: string;\r\n  }) {\r\n    return Object.keys(auditTrail).map((e) => {\r\n      if (e == 'executionTime') {\r\n        return { field: e, header: 'Time(sec)' };\r\n      } else if (e == 'requestTimestamp') {\r\n        return { field: e, header: 'Time(UTC)' };\r\n      } else if (e == 'email') {\r\n        return { field: e, header: 'User Email' };\r\n      } else {\r\n        return { field: e, header: this.humanizer.transform(e) };\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!-- <app-list-view></app-list-view>\r\n -->\r\n\r\n<div #gmap style=\"width: 100%; height: 500px\"></div>\r\n\r\n<div></div>\r\n","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ListViewComponent } from './components/list-view/list-view.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { UsersComponent } from './view/users.component';\r\nimport { ExcelModule, GridModule, PDFModule } from '@progress/kendo-angular-grid';\r\nimport { EditViewComponent } from './components/edit-view/edit-view.component';\r\nimport { FormsDirectivesModule } from 'src/app/shared/directives/forms-directives/forms-directives.module';\r\n\r\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\r\n\r\nimport { IconsModule } from '@progress/kendo-angular-icons';\r\nimport { DropDownsModule } from '@progress/kendo-angular-dropdowns';\r\nimport { LabelModule } from '@progress/kendo-angular-label';\r\nimport { ButtonsModule } from '@progress/kendo-angular-buttons';\r\nimport { InputsModule } from '@progress/kendo-angular-inputs';\r\nimport { LynxGridModule } from 'src/app/shared/components/lynx-grid/lynx-grid.module';\r\n\r\nconst KENDO_COMPONENTS = [\r\n  GridModule,\r\n  PDFModule,\r\n  ExcelModule,\r\n  InputsModule,\r\n  ButtonsModule,\r\n  LabelModule,\r\n  DropDownsModule,\r\n  IconsModule,\r\n];\r\n@NgModule({\r\n  declarations: [UsersComponent, ListViewComponent, EditViewComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UsersRoutingModule,\r\n    FormsDirectivesModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxSkeletonLoaderModule,\r\n    LynxGridModule,\r\n    ...KENDO_COMPONENTS,\r\n  ],\r\n})\r\nexport class UsersModule {}\r\n","import { Attribute, Directive, forwardRef } from '@angular/core';\r\nimport type { Validator } from '@angular/forms';\r\nimport { NG_VALIDATORS } from '@angular/forms';\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nexport const requiredValidatorLogic = (_required: boolean) => (control: { value: { id: null } }) => {\r\n  if (!control.value) {\r\n    return { valid: false };\r\n  }\r\n\r\n  return control.value.id && control.value.id !== null ? null : { valid: false };\r\n};\r\n\r\nconst Required_VALIDATOR: any = {\r\n  provide: NG_VALIDATORS,\r\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n  useExisting: forwardRef(() => RequiredValidator),\r\n  multi: true,\r\n};\r\n\r\n@Directive({\r\n  selector: '[appIsRequired]',\r\n  providers: [Required_VALIDATOR],\r\n})\r\nexport class RequiredValidator implements Validator {\r\n  private _validator: any;\r\n\r\n  constructor(@Attribute('isRequired') required: boolean) {\r\n    this._validator = requiredValidatorLogic(required);\r\n  }\r\n\r\n  validate(c: any) {\r\n    return this._validator(c);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ValidationErrorDirective } from './validation-error-directive/validation-error.directive';\r\nimport { FormsEnterButtonDirective } from './enter-button-directive/forms-enter-button.directive';\r\nimport { AutoTabDirective } from './auto-tab-directive/auto-tab.directive';\r\nimport { MarkAsteriskDirective } from './mark-asterisk/mark-asterisk.directive';\r\nimport { RequiredValidator } from './required-directive/required.directive';\r\n\r\nconst DIRECTIVES = [\r\n  FormsEnterButtonDirective,\r\n  ValidationErrorDirective,\r\n  AutoTabDirective,\r\n  MarkAsteriskDirective,\r\n  RequiredValidator,\r\n];\r\n\r\n@NgModule({\r\n  declarations: [...DIRECTIVES],\r\n  imports: [],\r\n  exports: [...DIRECTIVES],\r\n})\r\nexport class FormsDirectivesModule {}\r\n","/* eslint-disable @typescript-eslint/consistent-type-imports */\r\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport { Directive, ElementRef, Input, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { FormGroup, FormGroupDirective } from '@angular/forms';\r\nimport type { Observable } from 'rxjs';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport type { IFormErrors } from './error-message.interface';\r\n\r\n@Directive({\r\n  selector: '[appValidationError]',\r\n})\r\nexport class ValidationErrorDirective implements OnInit, OnDestroy {\r\n  /**\r\n   *\r\n   * @usage add ValidationError [showError$]=\"your subject variable\"\r\n      [errorMessages]=\"your error list variable\" to your form element\r\n   */\r\n  constructor(private el: ElementRef, private renderer: Renderer2, private form: FormGroupDirective) {}\r\n  @Input()\r\n  showError$!: Observable<boolean>;\r\n  @Input()\r\n  errorMessages!: IFormErrors[];\r\n  onDestroy$ = new Subject<void>();\r\n\r\n  ngOnDestroy(): void {\r\n    this.onDestroy$.next();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.clearAllErrors();\r\n\r\n    this.showError$.pipe(takeUntil(this.onDestroy$)).subscribe(() => {\r\n      this.checkAllInputs();\r\n    });\r\n    this.onInputClearError();\r\n  }\r\n\r\n  onInputClearError() {\r\n    // on any input value change clear all errors\r\n    this.formGroup.valueChanges.pipe(takeUntil(this.onDestroy$)).subscribe(() => {\r\n      this.clearAllErrors();\r\n    });\r\n  }\r\n\r\n  get allInputChildren(): NodeListOf<HTMLInputElement> {\r\n    return (this.el.nativeElement as HTMLElement).querySelectorAll(\r\n      'input,kendo-dropdownlist,kendo-colorpicker,kendo-fileselect,kendo-numerictextbox,p-colorpicker,kendo-datepicker,p-inputNumber,p-dropdown,kendo-timepicker'\r\n    );\r\n  }\r\n\r\n  /**Returns FormGroup of the form */\r\n  get formGroup(): FormGroup {\r\n    return this.form.control;\r\n  }\r\n\r\n  /**Returns FormControl name by index of the list */\r\n  getTargetInputFormControlName(index: number) {\r\n    return this.allInputChildren[index].attributes.getNamedItem('formcontrolname')?.nodeValue;\r\n  }\r\n\r\n  checkAllInputs(): void {\r\n    this.allInputChildren.forEach((input, index) => {\r\n      const formControlName = this.getTargetInputFormControlName(index);\r\n      const valid = this.getFormControlValidStatus(formControlName!);\r\n      if (!valid) {\r\n        const parentDiv = input.parentElement;\r\n        this.addErrorStyle(parentDiv);\r\n        this.addErrorMessage(parentDiv!, input, formControlName!);\r\n      }\r\n    });\r\n  }\r\n\r\n  clearAllErrors(): void {\r\n    this.allInputChildren.forEach((input) => {\r\n      const parentDiv = input.parentElement;\r\n      this.removeErrorMessage(parentDiv!, input);\r\n      this.removeErrorStyle(parentDiv!);\r\n    });\r\n  }\r\n\r\n  getFormControlValidStatus(controlName: string): boolean {\r\n    const formControl = this.formGroup.get(controlName);\r\n    return formControl ? formControl.valid : true;\r\n  }\r\n\r\n  addErrorStyle(parent: HTMLElement | null): void {\r\n    this.renderer.addClass(parent, 'message-wrp');\r\n    this.renderer.addClass(parent, 'error');\r\n  }\r\n\r\n  removeErrorStyle(parent: HTMLElement): void {\r\n    this.renderer.removeClass(parent, 'message-wrp');\r\n    this.renderer.removeClass(parent, 'error');\r\n  }\r\n\r\n  getErrorText(controlName: string): string {\r\n    const error = Object.keys(this.formGroup.get(controlName)!.errors!)[0];\r\n    const formErrors = this.errorMessages.find((e) => e.controlName === controlName);\r\n    const message = formErrors!.errors.find((e) => e.error === error)!.message;\r\n    return message ?? `please enter a valid ${error}`;\r\n  }\r\n\r\n  getErrorMessage(controlName: string) {\r\n    const span = this.renderer.createElement('span');\r\n    const messageText = this.getErrorText(controlName);\r\n    const message = this.renderer.createText(messageText);\r\n    this.renderer.addClass(span, 'message');\r\n    this.renderer.addClass(span, 'text-danger');\r\n    this.renderer.addClass(span, 'text-left');\r\n    this.renderer.addClass(span, 'd-block');\r\n    this.renderer.appendChild(span, message);\r\n    return span;\r\n  }\r\n\r\n  addErrorMessage(parent: HTMLElement, input: HTMLInputElement, controlName: string): void {\r\n    const exists = this.renderer.nextSibling(input);\r\n    if (!exists) {\r\n      const messageSpan = this.getErrorMessage(controlName);\r\n      this.renderer.appendChild(parent, messageSpan);\r\n    }\r\n  }\r\n\r\n  removeErrorMessage(parent: HTMLElement, input: HTMLInputElement): void {\r\n    const exsistingSpan = this.renderer.nextSibling(input);\r\n    exsistingSpan && this.renderer.removeChild(parent, exsistingSpan);\r\n  }\r\n}\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"]}