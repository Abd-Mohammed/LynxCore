{"version":3,"file":"common.js","mappings":"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","names":["i0","_r5","ctx_r4","close","ctx_r6","_r8","ctx_r7","onAnimationStart","ctx_r9","onAnimationEnd","ctx_r0","showAnimation","animation","style","transform","opacity","animate","hideAnimation","Sidebar","constructor","el","renderer","cd","config","this","blockScroll","autoZIndex","baseZIndex","modal","dismissible","showCloseIcon","closeOnEscape","transitionOptions","onShow","EventEmitter","onHide","visibleChange","_position","_fullScreen","transformOptions","ngAfterViewInit","initialized","ngAfterContentInit","templates","forEach","item","getType","contentTemplate","template","visible","_visible","val","position","value","fullScreen","show","ZIndexUtils","container","zIndex","enableModality","emit","hide","disableModality","event","preventDefault","mask","document","createElement","String","parseInt","DomHandler","maskClickListener","listen","body","appendChild","animationEndListener","destroyModal","bind","addEventListener","unbindMaskClickListener","removeChild","unbindAnimationEndListener","toState","element","appendContainer","bindDocumentEscapeListener","unbindGlobalListeners","appendTo","documentEscapeListener","nativeElement","ownerDocument","which","unbindDocumentEscapeListener","removeEventListener","ngOnDestroy","ɵfac","i1","ɵcmp","selectors","dirIndex","PrimeTemplate","_t","ctx","directives","i2","i3","styles","trigger","transition","useAnimation","changeDetection","SidebarModule","ɵmod","ɵinj","CommonModule","RippleModule","overlayIO","window","in","shape","encoded","temp","type","t_","radius","getRadius","geometry","p_","getCenter","options","fillColor","get","strokeColor","strokeWeight","getPosition","b_","getBounds","l_","getPath","m_","getPaths","out","map","google","maps","Circle","Number","center","pp_","apply","set","withLabel","MarkerWithLabel","icon","labelContent","labelAnchor","labelClass","labelStyle","labelVisible","Marker","Rectangle","bounds","bb_","Polyline","path","ll_","Polygon","paths","mm_","tt_","setValues","e","getArray","encoding","encodePath","r","i","length","push","decodePath","call","latLng","lat","lng","LatLng","getSouthWest","getNorthEast","sw","ne","LatLngBounds","s","t","drawing","OverlayType","prototype","p","getLength","getAt","extend","containsLatLng","numPaths","numPoints","j","vertex1","vertex2","inPoly","arguments","contains","console","log","ToWKT","wkt","toString","substring","NumberSuffixModule","HumanizerService","replace","toUpperCase","slice","factory","MapLoaderService","BehaviorSubject","strokeOpacity","promise","Promise","resolve","__onGapiLoaded","gapi","require","node","src","setAttribute","getElementsByTagName","initMap","gmapElement","load","_this","Map","zoom","streetViewControl","draggable","fullscreenControl","mapTypeControlOptions","createMarker","location","infoWindow","InfoWindow","marker","title","addListener","content","setContent","open","that","markerCurrentLocation","next"],"sourceRoot":"webpack:///","sources":["./node_modules/primeng/fesm2015/primeng-sidebar.js","./src/app/shared/custom-js/overlayIO.js","./src/app/shared/services/map-loader/custom-polygon.js","./src/app/shared/pipes/number-suffix/number-suffix.module.ts","./src/app/shared/services/humanizer/humanizer.service.ts","./src/app/shared/services/map-loader/map-loader.service.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ContentChildren, Output, NgModule } from '@angular/core';\nimport { animation, style, animate, trigger, transition, useAnimation } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { DomHandler } from 'primeng/dom';\nimport * as i1 from 'primeng/api';\nimport { PrimeTemplate } from 'primeng/api';\nimport { ZIndexUtils } from 'primeng/utils';\n\nconst showAnimation = animation([\n    style({ transform: '{{transform}}', opacity: 0 }),\n    animate('{{transition}}')\n]);\nconst hideAnimation = animation([\n    animate('{{transition}}', style({ transform: '{{transform}}', opacity: 0 }))\n]);\nclass Sidebar {\n    constructor(el, renderer, cd, config) {\n        this.el = el;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.config = config;\n        this.blockScroll = false;\n        this.autoZIndex = true;\n        this.baseZIndex = 0;\n        this.modal = true;\n        this.dismissible = true;\n        this.showCloseIcon = true;\n        this.closeOnEscape = true;\n        this.transitionOptions = '150ms cubic-bezier(0, 0, 0.2, 1)';\n        this.onShow = new EventEmitter();\n        this.onHide = new EventEmitter();\n        this.visibleChange = new EventEmitter();\n        this._position = \"left\";\n        this._fullScreen = false;\n        this.transformOptions = \"translate3d(-100%, 0px, 0px)\";\n    }\n    ngAfterViewInit() {\n        this.initialized = true;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                    break;\n                default:\n                    this.contentTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    get visible() {\n        return this._visible;\n    }\n    set visible(val) {\n        this._visible = val;\n    }\n    get position() {\n        return this._position;\n    }\n    ;\n    set position(value) {\n        this._position = value;\n        switch (value) {\n            case 'left':\n                this.transformOptions = \"translate3d(-100%, 0px, 0px)\";\n                break;\n            case 'right':\n                this.transformOptions = \"translate3d(100%, 0px, 0px)\";\n                break;\n            case 'bottom':\n                this.transformOptions = \"translate3d(0px, 100%, 0px)\";\n                break;\n            case 'top':\n                this.transformOptions = \"translate3d(0px, -100%, 0px)\";\n                break;\n        }\n    }\n    get fullScreen() {\n        return this._fullScreen;\n    }\n    set fullScreen(value) {\n        this._fullScreen = value;\n        if (value)\n            this.transformOptions = \"none\";\n    }\n    show() {\n        if (this.autoZIndex) {\n            ZIndexUtils.set('modal', this.container, this.baseZIndex || this.config.zIndex.modal);\n        }\n        if (this.modal) {\n            this.enableModality();\n        }\n        this.onShow.emit({});\n    }\n    hide() {\n        this.onHide.emit({});\n        if (this.modal) {\n            this.disableModality();\n        }\n    }\n    close(event) {\n        this.hide();\n        this.visibleChange.emit(false);\n        event.preventDefault();\n    }\n    enableModality() {\n        if (!this.mask) {\n            this.mask = document.createElement('div');\n            this.mask.style.zIndex = String(parseInt(this.container.style.zIndex) - 1);\n            DomHandler.addMultipleClasses(this.mask, 'p-component-overlay p-sidebar-mask p-component-overlay p-component-overlay-enter');\n            if (this.dismissible) {\n                this.maskClickListener = this.renderer.listen(this.mask, 'click', (event) => {\n                    if (this.dismissible) {\n                        this.close(event);\n                    }\n                });\n            }\n            document.body.appendChild(this.mask);\n            if (this.blockScroll) {\n                DomHandler.addClass(document.body, 'p-overflow-hidden');\n            }\n        }\n    }\n    disableModality() {\n        if (this.mask) {\n            DomHandler.addClass(this.mask, 'p-component-overlay-leave');\n            this.animationEndListener = this.destroyModal.bind(this);\n            this.mask.addEventListener('animationend', this.animationEndListener);\n        }\n    }\n    destroyModal() {\n        this.unbindMaskClickListener();\n        if (this.mask) {\n            document.body.removeChild(this.mask);\n        }\n        if (this.blockScroll) {\n            DomHandler.removeClass(document.body, 'p-overflow-hidden');\n        }\n        this.unbindAnimationEndListener();\n        this.mask = null;\n    }\n    onAnimationStart(event) {\n        switch (event.toState) {\n            case 'visible':\n                this.container = event.element;\n                this.appendContainer();\n                this.show();\n                if (this.closeOnEscape) {\n                    this.bindDocumentEscapeListener();\n                }\n                break;\n        }\n    }\n    onAnimationEnd(event) {\n        switch (event.toState) {\n            case 'void':\n                this.hide();\n                ZIndexUtils.clear(this.container);\n                this.unbindGlobalListeners();\n                break;\n        }\n    }\n    appendContainer() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.container);\n            else\n                DomHandler.appendChild(this.container, this.appendTo);\n        }\n    }\n    bindDocumentEscapeListener() {\n        const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n        this.documentEscapeListener = this.renderer.listen(documentTarget, 'keydown', (event) => {\n            if (event.which == 27) {\n                if (parseInt(this.container.style.zIndex) === ZIndexUtils.getCurrent()) {\n                    this.close(event);\n                }\n            }\n        });\n    }\n    unbindDocumentEscapeListener() {\n        if (this.documentEscapeListener) {\n            this.documentEscapeListener();\n            this.documentEscapeListener = null;\n        }\n    }\n    unbindMaskClickListener() {\n        if (this.maskClickListener) {\n            this.maskClickListener();\n            this.maskClickListener = null;\n        }\n    }\n    unbindGlobalListeners() {\n        this.unbindMaskClickListener();\n        this.unbindDocumentEscapeListener();\n    }\n    unbindAnimationEndListener() {\n        if (this.animationEndListener && this.mask) {\n            this.mask.removeEventListener('animationend', this.animationEndListener);\n            this.animationEndListener = null;\n        }\n    }\n    ngOnDestroy() {\n        this.initialized = false;\n        if (this.visible && this.modal) {\n            this.destroyModal();\n        }\n        if (this.appendTo && this.container) {\n            this.el.nativeElement.appendChild(this.container);\n        }\n        if (this.container && this.autoZIndex) {\n            ZIndexUtils.clear(this.container);\n        }\n        this.container = null;\n        this.unbindGlobalListeners();\n        this.unbindAnimationEndListener();\n    }\n}\nSidebar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: Sidebar, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i1.PrimeNGConfig }], target: i0.ɵɵFactoryTarget.Component });\nSidebar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: Sidebar, selector: \"p-sidebar\", inputs: { appendTo: \"appendTo\", blockScroll: \"blockScroll\", style: \"style\", styleClass: \"styleClass\", ariaCloseLabel: \"ariaCloseLabel\", autoZIndex: \"autoZIndex\", baseZIndex: \"baseZIndex\", modal: \"modal\", dismissible: \"dismissible\", showCloseIcon: \"showCloseIcon\", closeOnEscape: \"closeOnEscape\", transitionOptions: \"transitionOptions\", visible: \"visible\", position: \"position\", fullScreen: \"fullScreen\" }, outputs: { onShow: \"onShow\", onHide: \"onHide\", visibleChange: \"visibleChange\" }, host: { classAttribute: \"p-element\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <div #container [ngClass]=\"{'p-sidebar':true, 'p-sidebar-active': visible,\n            'p-sidebar-left': (position === 'left' && !fullScreen), 'p-sidebar-right': (position === 'right' && !fullScreen),\n            'p-sidebar-top': (position === 'top' && !fullScreen), 'p-sidebar-bottom': (position === 'bottom' && !fullScreen),\n            'p-sidebar-full': fullScreen}\"  *ngIf=\"visible\" [@panelState]=\"{value: 'visible', params: {transform: transformOptions, transition: transitionOptions}}\" (@panelState.start)=\"onAnimationStart($event)\" (@panelState.done)=\"onAnimationEnd($event)\" [ngStyle]=\"style\" [class]=\"styleClass\"  role=\"complementary\" [attr.aria-modal]=\"modal\">\n            <div class=\"p-sidebar-header\">\n                <button type=\"button\" class=\"p-sidebar-close p-sidebar-icon p-link\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\" [attr.aria-label]=\"ariaCloseLabel\"  *ngIf=\"showCloseIcon\" pRipple>\n                    <span class=\"p-sidebar-close-icon pi pi-times\"></span>\n                </button>\n            </div>\n            <div class=\"p-sidebar-content\">\n                <ng-content></ng-content>\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            </div>\n        </div>\n    `, isInline: true, styles: [\".p-sidebar{position:fixed;transition:transform .3s;display:flex;flex-direction:column}.p-sidebar-content{position:relative;overflow-y:auto}.p-sidebar-header{display:flex;align-items:center;justify-content:flex-end}.p-sidebar-icon{display:flex;align-items:center;justify-content:center}.p-sidebar-left{top:0;left:0;width:20rem;height:100%}.p-sidebar-right{top:0;right:0;width:20rem;height:100%}.p-sidebar-top{top:0;left:0;width:100%;height:10rem}.p-sidebar-bottom{bottom:0;left:0;width:100%;height:10rem}.p-sidebar-full{width:100%;height:100%;top:0;left:0;transition:none}.p-sidebar-left.p-sidebar-sm,.p-sidebar-right.p-sidebar-sm{width:20rem}.p-sidebar-left.p-sidebar-md,.p-sidebar-right.p-sidebar-md{width:40rem}.p-sidebar-left.p-sidebar-lg,.p-sidebar-right.p-sidebar-lg{width:60rem}.p-sidebar-bottom.p-sidebar-sm,.p-sidebar-top.p-sidebar-sm{height:10rem}.p-sidebar-bottom.p-sidebar-md,.p-sidebar-top.p-sidebar-md{height:20rem}.p-sidebar-bottom.p-sidebar-lg,.p-sidebar-top.p-sidebar-lg{height:30rem}@media screen and (max-width:64em){.p-sidebar-left.p-sidebar-lg,.p-sidebar-left.p-sidebar-md,.p-sidebar-right.p-sidebar-lg,.p-sidebar-right.p-sidebar-md{width:20rem}}\"], directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { type: i3.Ripple, selector: \"[pRipple]\" }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], animations: [\n        trigger('panelState', [\n            transition('void => visible', [\n                useAnimation(showAnimation)\n            ]),\n            transition('visible => void', [\n                useAnimation(hideAnimation)\n            ])\n        ])\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: Sidebar, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-sidebar',\n                    template: `\n        <div #container [ngClass]=\"{'p-sidebar':true, 'p-sidebar-active': visible,\n            'p-sidebar-left': (position === 'left' && !fullScreen), 'p-sidebar-right': (position === 'right' && !fullScreen),\n            'p-sidebar-top': (position === 'top' && !fullScreen), 'p-sidebar-bottom': (position === 'bottom' && !fullScreen),\n            'p-sidebar-full': fullScreen}\"  *ngIf=\"visible\" [@panelState]=\"{value: 'visible', params: {transform: transformOptions, transition: transitionOptions}}\" (@panelState.start)=\"onAnimationStart($event)\" (@panelState.done)=\"onAnimationEnd($event)\" [ngStyle]=\"style\" [class]=\"styleClass\"  role=\"complementary\" [attr.aria-modal]=\"modal\">\n            <div class=\"p-sidebar-header\">\n                <button type=\"button\" class=\"p-sidebar-close p-sidebar-icon p-link\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\" [attr.aria-label]=\"ariaCloseLabel\"  *ngIf=\"showCloseIcon\" pRipple>\n                    <span class=\"p-sidebar-close-icon pi pi-times\"></span>\n                </button>\n            </div>\n            <div class=\"p-sidebar-content\">\n                <ng-content></ng-content>\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            </div>\n        </div>\n    `,\n                    animations: [\n                        trigger('panelState', [\n                            transition('void => visible', [\n                                useAnimation(showAnimation)\n                            ]),\n                            transition('visible => void', [\n                                useAnimation(hideAnimation)\n                            ])\n                        ])\n                    ],\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    styleUrls: ['./sidebar.css'],\n                    host: {\n                        'class': 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i1.PrimeNGConfig }]; }, propDecorators: { appendTo: [{\n                type: Input\n            }], blockScroll: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], ariaCloseLabel: [{\n                type: Input\n            }], autoZIndex: [{\n                type: Input\n            }], baseZIndex: [{\n                type: Input\n            }], modal: [{\n                type: Input\n            }], dismissible: [{\n                type: Input\n            }], showCloseIcon: [{\n                type: Input\n            }], closeOnEscape: [{\n                type: Input\n            }], transitionOptions: [{\n                type: Input\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], onShow: [{\n                type: Output\n            }], onHide: [{\n                type: Output\n            }], visibleChange: [{\n                type: Output\n            }], visible: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], fullScreen: [{\n                type: Input\n            }] } });\nclass SidebarModule {\n}\nSidebarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SidebarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSidebarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SidebarModule, declarations: [Sidebar], imports: [CommonModule, RippleModule], exports: [Sidebar] });\nSidebarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SidebarModule, imports: [[CommonModule, RippleModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: SidebarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, RippleModule],\n                    exports: [Sidebar],\n                    declarations: [Sidebar]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Sidebar, SidebarModule };\n","(function (overlayIO, undefined) {\r\n\r\n  // shape: google.maps.Overlay\r\n  // encoded: boolean indicating whether pathes should be stored encoded\r\n  // Returns storable google.maps.Overlay-definition\r\n  overlayIO.in = function (shape, encoded) {\r\n      var temp = { type: this.t_(shape.type) };\r\n\r\n      switch (temp.type) {\r\n          case 'CIRCLE':\r\n              temp.radius = shape.getRadius();\r\n              temp.geometry = this.p_(shape.getCenter());\r\n              temp.options = {\r\n                  fillColor: shape.get('fillColor'),\r\n                  strokeColor: shape.get('strokeColor'),\r\n                  strokeWeight: shape.get('strokeWeight')\r\n              };\r\n              break;\r\n          case 'MARKER':\r\n              temp.geometry = this.p_(shape.getPosition());\r\n              break;\r\n          case 'RECTANGLE':\r\n              temp.geometry = this.b_(shape.getBounds());\r\n              temp.options = {\r\n                  fillColor: shape.get('fillColor'),\r\n                  strokeColor: shape.get('strokeColor'),\r\n                  strokeWeight: shape.get('strokeWeight')\r\n              };\r\n              break;\r\n          case 'POLYLINE':\r\n              temp.geometry = this.l_(shape.getPath(), encoded);\r\n              break;\r\n          case 'POLYGON':\r\n              temp.geometry = this.m_(shape.getPaths(), encoded);\r\n              temp.options = {\r\n                  fillColor: shape.get('fillColor'),\r\n                  strokeColor: shape.get('strokeColor'),\r\n                  strokeWeight: shape.get('strokeWeight')\r\n              };\r\n              break;\r\n      }\r\n\r\n      return temp;\r\n  }\r\n\r\n  // shape: google.maps.Overlay\r\n  // map: map where to draw the shapes\r\n  // Returns google.maps.Overlay\r\n  overlayIO.out = function (shape, map) {\r\n\r\n      var temp = null;\r\n\r\n      switch (shape.type) {\r\n          case 'CIRCLE':\r\n              temp = new google.maps.Circle({ radius: Number(shape.radius), center: this.pp_.apply(this, shape.geometry) });\r\n              temp.set('fillColor', shape.options.fillColor);\r\n              temp.set('strokeColor', shape.options.strokeColor);\r\n              temp.set('strokeWeight', shape.options.strokeWeight);\r\n              break;\r\n          case 'MARKER':\r\n              if (typeof shape.withLabel !== 'undefined' && shape.withLabel === true) {\r\n                  temp = new MarkerWithLabel({\r\n                      position: this.pp_.apply(this, shape.geometry),\r\n                      icon: shape.icon,\r\n                      labelContent: shape.labelContent,\r\n                      labelAnchor: shape.labelAnchor,\r\n                      labelClass: shape.labelClass,\r\n                      labelStyle: shape.labelStyle,\r\n                      labelVisible: shape.labelVisible\r\n                  });\r\n              }\r\n              else {\r\n                  temp = new google.maps.Marker({ position: this.pp_.apply(this, shape.geometry), icon: shape.icon });\r\n              }\r\n              break;\r\n          case 'RECTANGLE':\r\n              temp = new google.maps.Rectangle({ bounds: this.bb_.apply(this, shape.geometry) });\r\n              temp.set('fillColor', shape.options.fillColor);\r\n              temp.set('strokeColor', shape.options.strokeColor);\r\n              temp.set('strokeWeight', shape.options.strokeWeight);\r\n              break;\r\n          case 'POLYLINE':\r\n              temp = new google.maps.Polyline({ path: this.ll_(shape.geometry) });\r\n              break;\r\n          case 'POLYGON':\r\n              temp = new google.maps.Polygon({ paths: this.mm_(shape.geometry) });\r\n              temp.set('fillColor', shape.options.fillColor);\r\n              temp.set('strokeColor', shape.options.strokeColor);\r\n              temp.set('strokeWeight', shape.options.strokeWeight);\r\n              break;\r\n      }\r\n\r\n      temp.type = this.tt_(shape.type);\r\n      if (typeof map !== 'undefined') {\r\n          temp.setValues({ map: map })\r\n      }\r\n\r\n      return temp;\r\n  }\r\n\r\n  overlayIO.l_ = function (path, e) {\r\n      path = (path.getArray) ? path.getArray() : path;\r\n      if (e) {\r\n          return google.maps.geometry.encoding.encodePath(path);\r\n      } else {\r\n          var r = [];\r\n          for (var i = 0; i < path.length; ++i) {\r\n              r.push(this.p_(path[i]));\r\n          }\r\n          return r;\r\n      }\r\n  }\r\n\r\n  overlayIO.ll_ = function (path) {\r\n      if (typeof path === 'string') {\r\n          return google.maps.geometry.encoding.decodePath(path);\r\n      }\r\n      else {\r\n          var r = [];\r\n          for (var i = 0; i < path.length; ++i) {\r\n              r.push(this.pp_.apply(this, path[i]));\r\n          }\r\n          return r;\r\n      }\r\n  }\r\n\r\n  overlayIO.m_ = function (paths, e) {\r\n      var r = [];\r\n      paths = (paths.getArray) ? paths.getArray() : paths;\r\n      for (var i = 0; i < paths.length; ++i) {\r\n          r.push(this.l_(paths[i], e));\r\n      }\r\n      return r;\r\n  }\r\n\r\n  overlayIO.mm_ = function (paths) {\r\n      var r = [];\r\n      for (var i = 0; i < paths.length; ++i) {\r\n          r.push(this.ll_.call(this, paths[i]));\r\n      }\r\n      return r;\r\n  }\r\n\r\n  overlayIO.p_ = function (latLng) {\r\n      return ([latLng.lat(), latLng.lng()]);\r\n  }\r\n\r\n  overlayIO.pp_ = function (lat, lng) {\r\n      return new google.maps.LatLng(lat, lng);\r\n  }\r\n\r\n  overlayIO.b_ = function (bounds) {\r\n      return ([this.p_(bounds.getSouthWest()),\r\n              this.p_(bounds.getNorthEast())]);\r\n  }\r\n\r\n  overlayIO.bb_ = function (sw, ne) {\r\n      return new google.maps.LatLngBounds(this.pp_.apply(this, sw),\r\n                                          this.pp_.apply(this, ne));\r\n  }\r\n\r\n  overlayIO.t_ = function (s) {\r\n      var t = ['CIRCLE', 'MARKER', 'RECTANGLE', 'POLYLINE', 'POLYGON'];\r\n      for (var i = 0; i < t.length; ++i) {\r\n          if (s === google.maps.drawing.OverlayType[t[i]]) {\r\n              return t[i];\r\n          }\r\n      }\r\n  }\r\n\r\n  overlayIO.tt_ = function (t) {\r\n      return google.maps.drawing.OverlayType[t];\r\n  }\r\n\r\n}(window.overlayIO = window.overlayIO || {}));\r\n","// Polygon getBounds extension - google-maps-extensions\r\n// https://github.com/tparkin/Google-Maps-Point-in-Polygon\r\n// http://code.google.com/p/google-maps-extensions/source/browse/google.maps.Polygon.getBounds.js\r\nif (!google.maps.Polygon.prototype.getBounds) {\r\n  google.maps.Polygon.prototype.getBounds = function (latLng) {\r\n    var bounds = new google.maps.LatLngBounds(),\r\n      paths = this.getPaths(),\r\n      path,\r\n      p,\r\n      i;\r\n\r\n    for (p = 0; p < paths.getLength(); p++) {\r\n      path = paths.getAt(p);\r\n      for (i = 0; i < path.getLength(); i++) {\r\n        bounds.extend(path.getAt(i));\r\n      }\r\n    }\r\n\r\n    return bounds;\r\n  };\r\n}\r\n\r\n// Polygon containsLatLng - method to determine if a latLng is within a polygon\r\ngoogle.maps.Polygon.prototype.containsLatLng = function (latLng) {\r\n  // Exclude points outside of bounds as there is no way they are in the poly\r\n\r\n  var inPoly = false,\r\n    bounds,\r\n    lat,\r\n    lng,\r\n    numPaths,\r\n    p,\r\n    path,\r\n    numPoints,\r\n    i,\r\n    j,\r\n    vertex1,\r\n    vertex2;\r\n\r\n  // Arguments are a pair of lat, lng variables\r\n  if (arguments.length == 2) {\r\n    if (typeof arguments[0] == 'number' && typeof arguments[1] == 'number') {\r\n      lat = arguments[0];\r\n      lng = arguments[1];\r\n    }\r\n  } else if (arguments.length == 1) {\r\n    bounds = this.getBounds();\r\n\r\n    if (!bounds && !bounds.contains(latLng)) {\r\n      return false;\r\n    }\r\n    lat = latLng.lat();\r\n    lng = latLng.lng();\r\n  } else {\r\n    console.log('Wrong number of inputs in google.maps.Polygon.prototype.contains.LatLng');\r\n  }\r\n\r\n  // Raycast point in polygon method\r\n\r\n  numPaths = this.getPaths().getLength();\r\n  for (p = 0; p < numPaths; p++) {\r\n    path = this.getPaths().getAt(p);\r\n    numPoints = path.getLength();\r\n    j = numPoints - 1;\r\n\r\n    for (i = 0; i < numPoints; i++) {\r\n      vertex1 = path.getAt(i);\r\n      vertex2 = path.getAt(j);\r\n\r\n      if ((vertex1.lng() < lng && vertex2.lng() >= lng) || (vertex2.lng() < lng && vertex1.lng() >= lng)) {\r\n        if (\r\n          vertex1.lat() + ((lng - vertex1.lng()) / (vertex2.lng() - vertex1.lng())) * (vertex2.lat() - vertex1.lat()) <\r\n          lat\r\n        ) {\r\n          inPoly = !inPoly;\r\n        }\r\n      }\r\n\r\n      j = i;\r\n    }\r\n  }\r\n\r\n  return inPoly;\r\n};\r\n\r\n//gmap polygon extend\r\ngoogle.maps.Polygon.prototype.ToWKT = function () {\r\n  var poly = this;\r\n  var wkt = 'POLYGON(';\r\n  var paths = poly.getPaths();\r\n  for (var i = 0; i < paths.getLength(); i++) {\r\n    var path = paths.getAt(i);\r\n    wkt += '(';\r\n    for (var j = 0; j < path.getLength(); j++) {\r\n      wkt += path.getAt(j).lng().toString() + ' ' + path.getAt(j).lat().toString() + ',';\r\n    }\r\n    wkt += path.getAt(0).lng().toString() + ' ' + path.getAt(0).lat().toString() + '),';\r\n  }\r\n\r\n  // resolve the last trailing \",\" and close the Polygon\r\n  wkt = wkt.substring(0, wkt.length - 1) + ')';\r\n\r\n  return wkt;\r\n};\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NumberSuffixPipe } from './number-suffix.pipe';\r\n\r\n@NgModule({\r\n  declarations: [NumberSuffixPipe],\r\n  imports: [CommonModule],\r\n  exports: [NumberSuffixPipe],\r\n})\r\nexport class NumberSuffixModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HumanizerService {\r\n  transform(value: string) {\r\n    if (value === '') {\r\n      return value;\r\n    }\r\n\r\n    value = value.replace(/([^A-Z])([A-Z])/g, '$1 $2').replace(/([A-Z])([A-Z][^A-Z])/g, '$1 $2');\r\n    value = value[0].toUpperCase() + value.slice(1);\r\n    return value;\r\n  }\r\n}\r\n","/* eslint-disable no-undef */\r\nimport { Injectable } from '@angular/core';\r\nimport {} from 'googlemaps';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { config } from '../../app.config';\r\ndeclare const window: any;\r\ndeclare const google: any;\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MapLoaderService {\r\n  private static promise: Promise<unknown>;\r\n  map!: google.maps.Map;\r\n  public googleApiKey = config.googleMapsApiKey;\r\n  public markerCurrentLocation = new BehaviorSubject(null);\r\n\r\n  public static load() {\r\n    if (!MapLoaderService.promise) {\r\n      // load once\r\n      MapLoaderService.promise = new Promise((resolve) => {\r\n        window['__onGapiLoaded'] = () => {\r\n          console.log('gapi loaded');\r\n          resolve(window.gapi);\r\n          require('src/app/shared/custom-js/overlayIO.js');\r\n          require('src/app/shared/services/map-loader/custom-polygon.js');\r\n        };\r\n        console.log('loading..');\r\n        const node = document.createElement('script');\r\n        node.src = `https://maps.googleapis.com/maps/api/js?key=${config.googleMapsApiKey}&libraries=drawing&geometry&callback=__onGapiLoaded`;\r\n        node.type = 'text/javascript';\r\n        node.setAttribute('defer', 'defer');\r\n        document.getElementsByTagName('head')[0].appendChild(node);\r\n      });\r\n    }\r\n\r\n    return MapLoaderService.promise;\r\n  }\r\n\r\n  public async initMap(gmapElement: any, lat: number, lng: number) {\r\n    await MapLoaderService.load();\r\n    this.map = new google.maps.Map(gmapElement.nativeElement, {\r\n      center: new google.maps.LatLng(lat, lng),\r\n      zoom: 5,\r\n      streetViewControl: false,\r\n      draggable: true,\r\n      fullscreenControl: false,\r\n      mapTypeControlOptions: {\r\n        style: 2,\r\n      },\r\n      // styles: BLACK_MODE_MAP,\r\n    });\r\n  }\r\n\r\n  createMarker(location: { lat: number; lng: number }) {\r\n    const infoWindow = new google.maps.InfoWindow();\r\n    const marker = new google.maps.Marker({\r\n      position: new google.maps.LatLng(location.lat, location.lng),\r\n      map: this.map,\r\n      title: 'markers',\r\n      draggable: true,\r\n    });\r\n\r\n    google.maps.event.addListener(marker, 'click', () => {\r\n      marker.content = '<p class=\"info-window-content\">' + marker.getPosition() + '</p>';\r\n      infoWindow.setContent('<h2>' + marker.title + '</h2>' + marker.content);\r\n      infoWindow.open(this.map, marker);\r\n    });\r\n\r\n    const that: this = this;\r\n    google.maps.event.addListener(marker, 'dragend', () => {\r\n      that.markerCurrentLocation.next(marker.getPosition());\r\n    });\r\n  }\r\n\r\n  createPolyline = (path: [{ lat: number; lng: number }]): google.maps.Polyline =>\r\n    new google.maps.Polyline({\r\n      path,\r\n      strokeColor: '#000000',\r\n      strokeWeight: 4,\r\n      zIndex: 3,\r\n      strokeOpacity: 1,\r\n    });\r\n}\r\n"]}